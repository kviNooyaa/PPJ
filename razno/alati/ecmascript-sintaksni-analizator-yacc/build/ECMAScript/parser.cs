// This code was generated by the Gardens Point Parser Generator
// Copyright (c) Wayne Kelly, QUT 2005-2008
// (see accompanying GPPGcopyright.rtf)

// GPPG version 1.3.1.136 (2008-11-11)
// Machine:  URSUS-PC
// DateTime: 23.12.2008 23:51:38
// UserName: Ursus
// Input file <parser.y>

// options: no-lines

using System;
using System.Collections.Generic;
using System.Text;
using gppg;

namespace ListCollection
{
public enum Tokens {error=126,
    EOF=127,KONST=128,IDENT=129,WHILE=130,DO=131,IF=132,
    ELSE=133,FOR=134,RETURN=135,CONTINUE=136,BREAK=137,DEFAULT=138,
    VAR=139,NEW=140,THIS=141,FUNCTION=142,SWITCH=143,CASE=144,
    OR=145,AND=146,LE=147,GE=148,EQ=149,NEQ=150,
    IFX=151};

public class Parser: ShiftReduceParser<int, LexLocation>
{
    private Dictionary<int, string> aliasses = null;

  protected override void Initialize()
  {
    this.errToken = (int)Tokens.error;
    this.eofToken = (int)Tokens.EOF;

    states=new State[194];
    AddState(0,new State(new int[]{123,6,139,11,59,77,140,33,141,62,129,63,128,64,40,65,142,96,132,105,131,112,130,119,134,124,136,133,137,137,135,141,143,144},new int[]{-1,1,-3,3,-4,104,-5,5,-9,78,-12,80,-21,52,-22,61,-23,68,-6,178}));
    AddState(1,new State(new int[]{127,2}));
    AddState(2,new State(-1));
    AddState(3,new State(new int[]{123,6,139,11,59,77,140,33,141,62,129,63,128,64,40,65,142,96,132,105,131,112,130,119,134,124,136,133,137,137,135,141,143,144,127,-2},new int[]{-4,4,-5,5,-9,78,-12,80,-21,52,-22,61,-23,68,-6,178}));
    AddState(4,new State(-4));
    AddState(5,new State(-5));
    AddState(6,new State(new int[]{125,7,123,6,139,11,59,77,140,33,141,62,129,63,128,64,40,65,142,69,132,105,131,112,130,119,134,124,136,133,137,137,135,141,143,144},new int[]{-7,8,-5,159,-9,78,-12,80,-21,52,-22,61,-23,68}));
    AddState(7,new State(-7));
    AddState(8,new State(new int[]{125,9,123,6,139,11,59,77,140,33,141,62,129,63,128,64,40,65,142,69,132,105,131,112,130,119,134,124,136,133,137,137,135,141,143,144},new int[]{-5,10,-9,78,-12,80,-21,52,-22,61,-23,68}));
    AddState(9,new State(-8));
    AddState(10,new State(-25));
    AddState(11,new State(new int[]{129,16},new int[]{-8,12,-28,177}));
    AddState(12,new State(new int[]{59,13,44,14}));
    AddState(13,new State(-9));
    AddState(14,new State(new int[]{129,16},new int[]{-28,15}));
    AddState(15,new State(-79));
    AddState(16,new State(new int[]{61,17,59,-80,44,-80}));
    AddState(17,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-13,18,-15,44,-16,45,-17,83,-18,95,-19,86,-20,29,-12,32,-21,52,-22,61,-23,68}));
    AddState(18,new State(new int[]{145,19,59,-81,44,-81}));
    AddState(19,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-15,20,-16,45,-17,83,-18,95,-19,86,-20,29,-12,32,-21,52,-22,61,-23,68}));
    AddState(20,new State(new int[]{146,21,145,-34,59,-34,44,-34,93,-34,41,-34}));
    AddState(21,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-16,22,-17,83,-18,95,-19,86,-20,29,-12,32,-21,52,-22,61,-23,68}));
    AddState(22,new State(new int[]{149,23,150,46,146,-36,145,-36,59,-36,44,-36,93,-36,41,-36}));
    AddState(23,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-17,24,-18,95,-19,86,-20,29,-12,32,-21,52,-22,61,-23,68}));
    AddState(24,new State(new int[]{60,25,62,48,147,84,148,93,149,-38,150,-38,146,-38,145,-38,59,-38,44,-38,93,-38,41,-38}));
    AddState(25,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-18,26,-19,86,-20,29,-12,32,-21,52,-22,61,-23,68}));
    AddState(26,new State(new int[]{43,27,45,50,60,-41,62,-41,147,-41,148,-41,149,-41,150,-41,146,-41,145,-41,59,-41,44,-41,93,-41,41,-41}));
    AddState(27,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-19,28,-20,29,-12,32,-21,52,-22,61,-23,68}));
    AddState(28,new State(-46));
    AddState(29,new State(new int[]{42,30,47,192,43,-48,45,-48,60,-48,62,-48,147,-48,148,-48,149,-48,150,-48,146,-48,145,-48,59,-48,44,-48,93,-48,41,-48}));
    AddState(30,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-19,31,-20,29,-12,32,-21,52,-22,61,-23,68}));
    AddState(31,new State(-49));
    AddState(32,new State(-51));
    AddState(33,new State(new int[]{141,62,129,63,128,64,40,65,142,69},new int[]{-21,34,-22,61,-23,68}));
    AddState(34,new State(new int[]{91,36,46,53,40,55,61,-55,59,-55,42,-55,47,-55,43,-55,45,-55,60,-55,62,-55,147,-55,148,-55,149,-55,150,-55,146,-55,145,-55,44,-55,93,-55,41,-55},new int[]{-24,35}));
    AddState(35,new State(-63));
    AddState(36,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91,93,-30,44,-30},new int[]{-14,37,-10,191,-12,41,-21,52,-22,61,-23,68,-13,118,-15,44,-16,45,-17,83,-18,95,-19,86,-20,29}));
    AddState(37,new State(new int[]{93,38,44,39}));
    AddState(38,new State(-64));
    AddState(39,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-10,40,-12,41,-21,52,-22,61,-23,68,-13,118,-15,44,-16,45,-17,83,-18,95,-19,86,-20,29}));
    AddState(40,new State(-29));
    AddState(41,new State(new int[]{61,42,42,-51,47,-51,43,-51,45,-51,60,-51,62,-51,147,-51,148,-51,149,-51,150,-51,146,-51,145,-51,93,-51,44,-51,41,-51,59,-51}));
    AddState(42,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-13,43,-15,44,-16,45,-17,83,-18,95,-19,86,-20,29,-12,32,-21,52,-22,61,-23,68}));
    AddState(43,new State(new int[]{145,19,93,-26,44,-26,41,-26,59,-26}));
    AddState(44,new State(new int[]{146,21,145,-33,59,-33,44,-33,93,-33,41,-33}));
    AddState(45,new State(new int[]{149,23,150,46,146,-35,145,-35,59,-35,44,-35,93,-35,41,-35}));
    AddState(46,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-17,47,-18,95,-19,86,-20,29,-12,32,-21,52,-22,61,-23,68}));
    AddState(47,new State(new int[]{60,25,62,48,147,84,148,93,149,-39,150,-39,146,-39,145,-39,59,-39,44,-39,93,-39,41,-39}));
    AddState(48,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-18,49,-19,86,-20,29,-12,32,-21,52,-22,61,-23,68}));
    AddState(49,new State(new int[]{43,27,45,50,60,-42,62,-42,147,-42,148,-42,149,-42,150,-42,146,-42,145,-42,59,-42,44,-42,93,-42,41,-42}));
    AddState(50,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-19,51,-20,29,-12,32,-21,52,-22,61,-23,68}));
    AddState(51,new State(-47));
    AddState(52,new State(new int[]{91,36,46,53,40,55,61,-56,59,-56,42,-56,47,-56,43,-56,45,-56,60,-56,62,-56,147,-56,148,-56,149,-56,150,-56,146,-56,145,-56,44,-56,93,-56,41,-56},new int[]{-24,35}));
    AddState(53,new State(new int[]{129,54}));
    AddState(54,new State(-65));
    AddState(55,new State(new int[]{41,56,140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-25,57,-10,190,-12,41,-21,52,-22,61,-23,68,-13,118,-15,44,-16,45,-17,83,-18,95,-19,86,-20,29}));
    AddState(56,new State(-66));
    AddState(57,new State(new int[]{41,58,44,59}));
    AddState(58,new State(-67));
    AddState(59,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-10,60,-12,41,-21,52,-22,61,-23,68,-13,118,-15,44,-16,45,-17,83,-18,95,-19,86,-20,29}));
    AddState(60,new State(-69));
    AddState(61,new State(-62));
    AddState(62,new State(-57));
    AddState(63,new State(-58));
    AddState(64,new State(-59));
    AddState(65,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-10,66,-12,41,-21,52,-22,61,-23,68,-13,118,-15,44,-16,45,-17,83,-18,95,-19,86,-20,29}));
    AddState(66,new State(new int[]{41,67}));
    AddState(67,new State(-60));
    AddState(68,new State(-61));
    AddState(69,new State(new int[]{40,70}));
    AddState(70,new State(new int[]{41,186,129,185},new int[]{-26,71}));
    AddState(71,new State(new int[]{41,72,44,179}));
    AddState(72,new State(new int[]{123,73}));
    AddState(73,new State(new int[]{123,6,139,11,59,77,140,33,141,62,129,63,128,64,40,65,142,96,132,105,131,112,130,119,134,124,136,133,137,137,135,141,143,144,125,-77},new int[]{-27,74,-3,76,-4,104,-5,5,-9,78,-12,80,-21,52,-22,61,-23,68,-6,178}));
    AddState(74,new State(new int[]{125,75}));
    AddState(75,new State(-72));
    AddState(76,new State(new int[]{123,6,139,11,59,77,140,33,141,62,129,63,128,64,40,65,142,96,132,105,131,112,130,119,134,124,136,133,137,137,135,141,143,144,125,-76},new int[]{-4,4,-5,5,-9,78,-12,80,-21,52,-22,61,-23,68,-6,178}));
    AddState(77,new State(-10));
    AddState(78,new State(new int[]{59,79}));
    AddState(79,new State(-11));
    AddState(80,new State(new int[]{61,81,59,-32}));
    AddState(81,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-13,82,-15,44,-16,45,-17,83,-18,95,-19,86,-20,29,-12,32,-21,52,-22,61,-23,68}));
    AddState(82,new State(new int[]{145,19,59,-31}));
    AddState(83,new State(new int[]{60,25,62,48,147,84,148,93,149,-37,150,-37,146,-37,145,-37,59,-37,44,-37,93,-37,41,-37}));
    AddState(84,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-18,85,-19,86,-20,29,-12,32,-21,52,-22,61,-23,68}));
    AddState(85,new State(new int[]{43,27,45,50,60,-43,62,-43,147,-43,148,-43,149,-43,150,-43,146,-43,145,-43,59,-43,44,-43,93,-43,41,-43}));
    AddState(86,new State(-45));
    AddState(87,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-20,88,-12,32,-21,52,-22,61,-23,68}));
    AddState(88,new State(-52));
    AddState(89,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-20,90,-12,32,-21,52,-22,61,-23,68}));
    AddState(90,new State(-53));
    AddState(91,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-20,92,-12,32,-21,52,-22,61,-23,68}));
    AddState(92,new State(-54));
    AddState(93,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-18,94,-19,86,-20,29,-12,32,-21,52,-22,61,-23,68}));
    AddState(94,new State(new int[]{43,27,45,50,60,-44,62,-44,147,-44,148,-44,149,-44,150,-44,146,-44,145,-44,59,-44,44,-44,93,-44,41,-44}));
    AddState(95,new State(new int[]{43,27,45,50,60,-40,62,-40,147,-40,148,-40,149,-40,150,-40,146,-40,145,-40,59,-40,44,-40,93,-40,41,-40}));
    AddState(96,new State(new int[]{40,70,129,97}));
    AddState(97,new State(new int[]{40,98}));
    AddState(98,new State(new int[]{41,181,129,185},new int[]{-26,99}));
    AddState(99,new State(new int[]{41,100,44,179}));
    AddState(100,new State(new int[]{123,101}));
    AddState(101,new State(new int[]{123,6,139,11,59,77,140,33,141,62,129,63,128,64,40,65,142,96,132,105,131,112,130,119,134,124,136,133,137,137,135,141,143,144,125,-77},new int[]{-27,102,-3,76,-4,104,-5,5,-9,78,-12,80,-21,52,-22,61,-23,68,-6,178}));
    AddState(102,new State(new int[]{125,103}));
    AddState(103,new State(-70));
    AddState(104,new State(-3));
    AddState(105,new State(new int[]{40,106}));
    AddState(106,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-10,107,-12,41,-21,52,-22,61,-23,68,-13,118,-15,44,-16,45,-17,83,-18,95,-19,86,-20,29}));
    AddState(107,new State(new int[]{41,108}));
    AddState(108,new State(new int[]{123,6,139,11,59,77,140,33,141,62,129,63,128,64,40,65,142,69,132,105,131,112,130,119,134,124,136,133,137,137,135,141,143,144},new int[]{-5,109,-9,78,-12,80,-21,52,-22,61,-23,68}));
    AddState(109,new State(new int[]{133,110,123,-13,139,-13,59,-13,140,-13,141,-13,129,-13,128,-13,40,-13,142,-13,132,-13,131,-13,130,-13,134,-13,136,-13,137,-13,135,-13,143,-13,127,-13,125,-13,144,-13,138,-13}));
    AddState(110,new State(new int[]{123,6,139,11,59,77,140,33,141,62,129,63,128,64,40,65,142,69,132,105,131,112,130,119,134,124,136,133,137,137,135,141,143,144},new int[]{-5,111,-9,78,-12,80,-21,52,-22,61,-23,68}));
    AddState(111,new State(-12));
    AddState(112,new State(new int[]{123,6,139,11,59,77,140,33,141,62,129,63,128,64,40,65,142,69,132,105,131,112,130,119,134,124,136,133,137,137,135,141,143,144},new int[]{-5,113,-9,78,-12,80,-21,52,-22,61,-23,68}));
    AddState(113,new State(new int[]{130,114}));
    AddState(114,new State(new int[]{40,115}));
    AddState(115,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-10,116,-12,41,-21,52,-22,61,-23,68,-13,118,-15,44,-16,45,-17,83,-18,95,-19,86,-20,29}));
    AddState(116,new State(new int[]{41,117}));
    AddState(117,new State(-14));
    AddState(118,new State(new int[]{145,19,93,-27,44,-27,41,-27,59,-27}));
    AddState(119,new State(new int[]{40,120}));
    AddState(120,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-10,121,-12,41,-21,52,-22,61,-23,68,-13,118,-15,44,-16,45,-17,83,-18,95,-19,86,-20,29}));
    AddState(121,new State(new int[]{41,122}));
    AddState(122,new State(new int[]{123,6,139,11,59,77,140,33,141,62,129,63,128,64,40,65,142,69,132,105,131,112,130,119,134,124,136,133,137,137,135,141,143,144},new int[]{-5,123,-9,78,-12,80,-21,52,-22,61,-23,68}));
    AddState(123,new State(-15));
    AddState(124,new State(new int[]{40,125}));
    AddState(125,new State(new int[]{139,169,140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-10,126,-12,41,-21,52,-22,61,-23,68,-13,118,-15,44,-16,45,-17,83,-18,95,-19,86,-20,29}));
    AddState(126,new State(new int[]{59,127}));
    AddState(127,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-10,128,-12,41,-21,52,-22,61,-23,68,-13,118,-15,44,-16,45,-17,83,-18,95,-19,86,-20,29}));
    AddState(128,new State(new int[]{59,129}));
    AddState(129,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-10,130,-12,41,-21,52,-22,61,-23,68,-13,118,-15,44,-16,45,-17,83,-18,95,-19,86,-20,29}));
    AddState(130,new State(new int[]{41,131}));
    AddState(131,new State(new int[]{123,6,139,11,59,77,140,33,141,62,129,63,128,64,40,65,142,69,132,105,131,112,130,119,134,124,136,133,137,137,135,141,143,144},new int[]{-5,132,-9,78,-12,80,-21,52,-22,61,-23,68}));
    AddState(132,new State(-16));
    AddState(133,new State(new int[]{129,134,59,136}));
    AddState(134,new State(new int[]{59,135}));
    AddState(135,new State(-18));
    AddState(136,new State(-19));
    AddState(137,new State(new int[]{129,138,59,140}));
    AddState(138,new State(new int[]{59,139}));
    AddState(139,new State(-20));
    AddState(140,new State(-21));
    AddState(141,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-10,142,-12,41,-21,52,-22,61,-23,68,-13,118,-15,44,-16,45,-17,83,-18,95,-19,86,-20,29}));
    AddState(142,new State(new int[]{59,143}));
    AddState(143,new State(-22));
    AddState(144,new State(new int[]{40,145}));
    AddState(145,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-10,146,-12,41,-21,52,-22,61,-23,68,-13,118,-15,44,-16,45,-17,83,-18,95,-19,86,-20,29}));
    AddState(146,new State(new int[]{41,147}));
    AddState(147,new State(new int[]{123,148}));
    AddState(148,new State(new int[]{144,155,138,164},new int[]{-11,149,-29,151,-31,163,-30,167}));
    AddState(149,new State(new int[]{125,150}));
    AddState(150,new State(-23));
    AddState(151,new State(new int[]{144,155,138,164,125,-82},new int[]{-31,152,-30,153}));
    AddState(152,new State(-88));
    AddState(153,new State(new int[]{144,155,125,-83},new int[]{-29,154,-31,163}));
    AddState(154,new State(new int[]{144,155,125,-84},new int[]{-31,152}));
    AddState(155,new State(new int[]{129,156,128,160}));
    AddState(156,new State(new int[]{58,157}));
    AddState(157,new State(new int[]{123,6,139,11,59,77,140,33,141,62,129,63,128,64,40,65,142,69,132,105,131,112,130,119,134,124,136,133,137,137,135,141,143,144,144,-90,138,-90,125,-90},new int[]{-7,158,-5,159,-9,78,-12,80,-21,52,-22,61,-23,68}));
    AddState(158,new State(new int[]{123,6,139,11,59,77,140,33,141,62,129,63,128,64,40,65,142,69,132,105,131,112,130,119,134,124,136,133,137,137,135,141,143,144,144,-89,138,-89,125,-89},new int[]{-5,10,-9,78,-12,80,-21,52,-22,61,-23,68}));
    AddState(159,new State(-24));
    AddState(160,new State(new int[]{58,161}));
    AddState(161,new State(new int[]{123,6,139,11,59,77,140,33,141,62,129,63,128,64,40,65,142,69,132,105,131,112,130,119,134,124,136,133,137,137,135,141,143,144,144,-92,138,-92,125,-92},new int[]{-7,162,-5,159,-9,78,-12,80,-21,52,-22,61,-23,68}));
    AddState(162,new State(new int[]{123,6,139,11,59,77,140,33,141,62,129,63,128,64,40,65,142,69,132,105,131,112,130,119,134,124,136,133,137,137,135,141,143,144,144,-91,138,-91,125,-91},new int[]{-5,10,-9,78,-12,80,-21,52,-22,61,-23,68}));
    AddState(163,new State(-87));
    AddState(164,new State(new int[]{58,165}));
    AddState(165,new State(new int[]{123,6,139,11,59,77,140,33,141,62,129,63,128,64,40,65,142,69,132,105,131,112,130,119,134,124,136,133,137,137,135,141,143,144,144,-93,125,-93},new int[]{-7,166,-5,159,-9,78,-12,80,-21,52,-22,61,-23,68}));
    AddState(166,new State(new int[]{123,6,139,11,59,77,140,33,141,62,129,63,128,64,40,65,142,69,132,105,131,112,130,119,134,124,136,133,137,137,135,141,143,144,144,-94,125,-94},new int[]{-5,10,-9,78,-12,80,-21,52,-22,61,-23,68}));
    AddState(167,new State(new int[]{144,155,125,-86},new int[]{-29,168,-31,163}));
    AddState(168,new State(new int[]{144,155,125,-85},new int[]{-31,152}));
    AddState(169,new State(new int[]{129,16},new int[]{-8,170,-28,177}));
    AddState(170,new State(new int[]{59,171,44,14}));
    AddState(171,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-10,172,-12,41,-21,52,-22,61,-23,68,-13,118,-15,44,-16,45,-17,83,-18,95,-19,86,-20,29}));
    AddState(172,new State(new int[]{59,173}));
    AddState(173,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-10,174,-12,41,-21,52,-22,61,-23,68,-13,118,-15,44,-16,45,-17,83,-18,95,-19,86,-20,29}));
    AddState(174,new State(new int[]{41,175}));
    AddState(175,new State(new int[]{123,6,139,11,59,77,140,33,141,62,129,63,128,64,40,65,142,69,132,105,131,112,130,119,134,124,136,133,137,137,135,141,143,144},new int[]{-5,176,-9,78,-12,80,-21,52,-22,61,-23,68}));
    AddState(176,new State(-17));
    AddState(177,new State(-78));
    AddState(178,new State(-6));
    AddState(179,new State(new int[]{129,180}));
    AddState(180,new State(-75));
    AddState(181,new State(new int[]{123,182}));
    AddState(182,new State(new int[]{123,6,139,11,59,77,140,33,141,62,129,63,128,64,40,65,142,96,132,105,131,112,130,119,134,124,136,133,137,137,135,141,143,144,125,-77},new int[]{-27,183,-3,76,-4,104,-5,5,-9,78,-12,80,-21,52,-22,61,-23,68,-6,178}));
    AddState(183,new State(new int[]{125,184}));
    AddState(184,new State(-71));
    AddState(185,new State(-74));
    AddState(186,new State(new int[]{123,187}));
    AddState(187,new State(new int[]{123,6,139,11,59,77,140,33,141,62,129,63,128,64,40,65,142,96,132,105,131,112,130,119,134,124,136,133,137,137,135,141,143,144,125,-77},new int[]{-27,188,-3,76,-4,104,-5,5,-9,78,-12,80,-21,52,-22,61,-23,68,-6,178}));
    AddState(188,new State(new int[]{125,189}));
    AddState(189,new State(-73));
    AddState(190,new State(-68));
    AddState(191,new State(-28));
    AddState(192,new State(new int[]{140,33,141,62,129,63,128,64,40,65,142,69,43,87,45,89,33,91},new int[]{-19,193,-20,29,-12,32,-21,52,-22,61,-23,68}));
    AddState(193,new State(-50));

    rules=new Rule[95];
    rules[1]=new Rule(-2, new int[]{-1,127});
    rules[2]=new Rule(-1, new int[]{-3});
    rules[3]=new Rule(-3, new int[]{-4});
    rules[4]=new Rule(-3, new int[]{-3,-4});
    rules[5]=new Rule(-4, new int[]{-5});
    rules[6]=new Rule(-4, new int[]{-6});
    rules[7]=new Rule(-5, new int[]{123,125});
    rules[8]=new Rule(-5, new int[]{123,-7,125});
    rules[9]=new Rule(-5, new int[]{139,-8,59});
    rules[10]=new Rule(-5, new int[]{59});
    rules[11]=new Rule(-5, new int[]{-9,59});
    rules[12]=new Rule(-5, new int[]{132,40,-10,41,-5,133,-5});
    rules[13]=new Rule(-5, new int[]{132,40,-10,41,-5});
    rules[14]=new Rule(-5, new int[]{131,-5,130,40,-10,41});
    rules[15]=new Rule(-5, new int[]{130,40,-10,41,-5});
    rules[16]=new Rule(-5, new int[]{134,40,-10,59,-10,59,-10,41,-5});
    rules[17]=new Rule(-5, new int[]{134,40,139,-8,59,-10,59,-10,41,-5});
    rules[18]=new Rule(-5, new int[]{136,129,59});
    rules[19]=new Rule(-5, new int[]{136,59});
    rules[20]=new Rule(-5, new int[]{137,129,59});
    rules[21]=new Rule(-5, new int[]{137,59});
    rules[22]=new Rule(-5, new int[]{135,-10,59});
    rules[23]=new Rule(-5, new int[]{143,40,-10,41,123,-11,125});
    rules[24]=new Rule(-7, new int[]{-5});
    rules[25]=new Rule(-7, new int[]{-7,-5});
    rules[26]=new Rule(-10, new int[]{-12,61,-13});
    rules[27]=new Rule(-10, new int[]{-13});
    rules[28]=new Rule(-14, new int[]{-10});
    rules[29]=new Rule(-14, new int[]{-14,44,-10});
    rules[30]=new Rule(-14, new int[]{});
    rules[31]=new Rule(-9, new int[]{-12,61,-13});
    rules[32]=new Rule(-9, new int[]{-12});
    rules[33]=new Rule(-13, new int[]{-15});
    rules[34]=new Rule(-13, new int[]{-13,145,-15});
    rules[35]=new Rule(-15, new int[]{-16});
    rules[36]=new Rule(-15, new int[]{-15,146,-16});
    rules[37]=new Rule(-16, new int[]{-17});
    rules[38]=new Rule(-16, new int[]{-16,149,-17});
    rules[39]=new Rule(-16, new int[]{-16,150,-17});
    rules[40]=new Rule(-17, new int[]{-18});
    rules[41]=new Rule(-17, new int[]{-17,60,-18});
    rules[42]=new Rule(-17, new int[]{-17,62,-18});
    rules[43]=new Rule(-17, new int[]{-17,147,-18});
    rules[44]=new Rule(-17, new int[]{-17,148,-18});
    rules[45]=new Rule(-18, new int[]{-19});
    rules[46]=new Rule(-18, new int[]{-18,43,-19});
    rules[47]=new Rule(-18, new int[]{-18,45,-19});
    rules[48]=new Rule(-19, new int[]{-20});
    rules[49]=new Rule(-19, new int[]{-20,42,-19});
    rules[50]=new Rule(-19, new int[]{-20,47,-19});
    rules[51]=new Rule(-20, new int[]{-12});
    rules[52]=new Rule(-20, new int[]{43,-20});
    rules[53]=new Rule(-20, new int[]{45,-20});
    rules[54]=new Rule(-20, new int[]{33,-20});
    rules[55]=new Rule(-12, new int[]{140,-21});
    rules[56]=new Rule(-12, new int[]{-21});
    rules[57]=new Rule(-22, new int[]{141});
    rules[58]=new Rule(-22, new int[]{129});
    rules[59]=new Rule(-22, new int[]{128});
    rules[60]=new Rule(-22, new int[]{40,-10,41});
    rules[61]=new Rule(-22, new int[]{-23});
    rules[62]=new Rule(-21, new int[]{-22});
    rules[63]=new Rule(-21, new int[]{-21,-24});
    rules[64]=new Rule(-21, new int[]{-21,91,-14,93});
    rules[65]=new Rule(-21, new int[]{-21,46,129});
    rules[66]=new Rule(-24, new int[]{40,41});
    rules[67]=new Rule(-24, new int[]{40,-25,41});
    rules[68]=new Rule(-25, new int[]{-10});
    rules[69]=new Rule(-25, new int[]{-25,44,-10});
    rules[70]=new Rule(-6, new int[]{142,129,40,-26,41,123,-27,125});
    rules[71]=new Rule(-6, new int[]{142,129,40,41,123,-27,125});
    rules[72]=new Rule(-23, new int[]{142,40,-26,41,123,-27,125});
    rules[73]=new Rule(-23, new int[]{142,40,41,123,-27,125});
    rules[74]=new Rule(-26, new int[]{129});
    rules[75]=new Rule(-26, new int[]{-26,44,129});
    rules[76]=new Rule(-27, new int[]{-3});
    rules[77]=new Rule(-27, new int[]{});
    rules[78]=new Rule(-8, new int[]{-28});
    rules[79]=new Rule(-8, new int[]{-8,44,-28});
    rules[80]=new Rule(-28, new int[]{129});
    rules[81]=new Rule(-28, new int[]{129,61,-13});
    rules[82]=new Rule(-11, new int[]{-29});
    rules[83]=new Rule(-11, new int[]{-29,-30});
    rules[84]=new Rule(-11, new int[]{-29,-30,-29});
    rules[85]=new Rule(-11, new int[]{-30,-29});
    rules[86]=new Rule(-11, new int[]{-30});
    rules[87]=new Rule(-29, new int[]{-31});
    rules[88]=new Rule(-29, new int[]{-29,-31});
    rules[89]=new Rule(-31, new int[]{144,129,58,-7});
    rules[90]=new Rule(-31, new int[]{144,129,58});
    rules[91]=new Rule(-31, new int[]{144,128,58,-7});
    rules[92]=new Rule(-31, new int[]{144,128,58});
    rules[93]=new Rule(-30, new int[]{138,58});
    rules[94]=new Rule(-30, new int[]{138,58,-7});

    nonTerminals = new string[] {"", "program", "$accept", "osnovni_elementi", 
      "osnovni_element", "naredba", "funkcija", "naredbe", "deklaracija_var", 
      "pridruzivanje", "izraz", "case", "lijeva_strana", "or", "izraz_zagrade", 
      "and", "jednakost", "usporedbe", "arit_nize", "arit_vise", "unarni", "poziv", 
      "osnovni_izraz", "funkcija_izraz", "argumenti", "argumenti_lista", "parametri_fun", 
      "tijelo_fun", "varijabla", "case_izrazi", "default_izraz", "case_izraz", 
      };
  }

  protected override void DoAction(int action)
  {
    switch (action)
    {
    }
  }

  protected override string TerminalToString(int terminal)
  {
    if (aliasses != null && aliasses.ContainsKey(terminal))
        return aliasses[terminal];
    else if (((Tokens)terminal).ToString() != terminal.ToString())
        return ((Tokens)terminal).ToString();
    else
        return CharToString((char)terminal);
  }

		
 
        public void Parsiraj()
        {
            Parser parser = new Parser();

            parser.scanner = new Scanner();

            parser.Parse();
        }

      
        class Scanner : gppg.IScanner<int, LexLocation>
        {

            public override int yylex()
            {
                string unznak = Glavni.mojaForma.mojSkener.Tabl_unif_znak.SljedZnak();
                if (unznak.Length > 1)
                {
                    foreach (string str in Enum.GetNames(typeof(Tokens)))
                    {
                        if (str == unznak) return (int)Enum.Parse(typeof(Tokens), unznak);
                    }
                    Glavni.Ispisi("GRESKA U DIZAJNU PROGRAMA!!!!! - VISEZNAKOVNI TOKEN NIJE PREPOZNAT");
                }
                else
                {
                    return Convert.ToChar(unznak);
                    Glavni.Ispisi("GRESKA U DIZAJNU PROGRAMA!!!!! - JEDNOZNAKOVNI TOKEN NIJE PREPOZNAT");
                }
                return 0;
            }

            public override void yyerror(string format, params object[] args)
            {
                Glavni.Ispisi(format);
            }
        
		}
}
}
